// Mocks generated by Mockito 5.4.4 from annotations
// in konfio_app_dog/test/presentation/bloc/bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:konfio_app_dog/features/home/domain/repositories/dog_local_rerpository.dart'
    as _i3;
import 'package:konfio_app_dog/features/home/domain/repositories/dog_respository.dart'
    as _i2;
import 'package:konfio_app_dog/features/home/domain/usecases/dog_usecase.dart'
    as _i4;
import 'package:konfio_app_dog/general_model/dog_model.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAbstractDogRepository_0 extends _i1.SmartFake
    implements _i2.AbstractDogRepository {
  _FakeAbstractDogRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAbstractDogLocalRepository_1 extends _i1.SmartFake
    implements _i3.AbstractDogLocalRepository {
  _FakeAbstractDogLocalRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DogUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockDogUseCase extends _i1.Mock implements _i4.DogUseCase {
  MockDogUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AbstractDogRepository get abstractDogRepository => (super.noSuchMethod(
        Invocation.getter(#abstractDogRepository),
        returnValue: _FakeAbstractDogRepository_0(
          this,
          Invocation.getter(#abstractDogRepository),
        ),
      ) as _i2.AbstractDogRepository);

  @override
  _i3.AbstractDogLocalRepository get abstractDogLocalRepository =>
      (super.noSuchMethod(
        Invocation.getter(#abstractDogLocalRepository),
        returnValue: _FakeAbstractDogLocalRepository_1(
          this,
          Invocation.getter(#abstractDogLocalRepository),
        ),
      ) as _i3.AbstractDogLocalRepository);

  @override
  _i5.Future<List<_i6.DogModel>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5.Future<List<_i6.DogModel>>.value(<_i6.DogModel>[]),
      ) as _i5.Future<List<_i6.DogModel>>);
}
